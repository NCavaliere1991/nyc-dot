import Head from 'next/head'
import { useEffect, useState } from 'react'
import BoroughSelector from '../components/BoroughSelector'
import Footer from '../components/Footer'
import Header from '../components/Header'
import { formatDate } from '../utilities/formatDate'

const DataPage = () => {
  const [data, setData] = useState([])
  const [selectedBorough, setSelectedBorough] = useState('All Boroughs')
  const boroughTags = [
    'Bronx',
    'Brooklyn',
    'Manhattan',
    'Queens',
    'Staten Island'
  ]
  const tags = boroughTags.map((tag) => ({ value: tag, label: tag }))
  async function getData() {
    const response = await fetch(
      'https://data.cityofnewyork.us/resource/au7q-njtk.json'
    )
    const data = await response.json()
    setData(data)
  }
  useEffect(() => {
    getData()
  }, [])

  if (!data) {
    return <div>Loading...</div>
  }

  return (
    <div>
      <Head>
        <title>NYC DOT Bike Rack Data</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className="bg-gray-600 lg:px-32">
        <div
          className={`flex flex-col items-center justify-center bg-white p-4 min-h-screen ${
            selectedBorough === 'Staten Island' ? 'mb-28' : 'mb-10'
          } lg:mb-0 lg:p-8`}
        >
          <h1 className="text-center lg:w-1/3 text-lg text-blue-800 font-semibold">
            The New York City Department of Transportation has collected data on
            all bike racks installed throughout the city. The table below
            provides useful information for each bike rack.
          </h1>
          <BoroughSelector
            selectedBorough={selectedBorough}
            onSelect={setSelectedBorough}
            tags={tags}
          />
          <table className="border border-black mt-5">
            <thead>
              <tr>
                <th className="border text-white border-black text-xs lg:text-base lg:p-4 bg-blue-700">
                  Object Id
                </th>
                <th className="border text-white border-black text-xs lg:text-base bg-blue-700 lg:p-4">
                  Borough Name
                </th>
                <th className="border text-white border-black text-xs lg:text-base bg-blue-700 lg:p-4">
                  Rack Address
                </th>
                <th className="border text-white border-black text-xs lg:text-base bg-blue-700 lg:p-4">
                  Asset Subtype
                </th>
                <th className="border text-white border-black text-xs lg:text-base bg-blue-700 lg:p-4">
                  Date Installed
                </th>
              </tr>
            </thead>
            <tbody>
              {selectedBorough !== 'All Boroughs'
                ? data
                    .filter((i: { boro_name: string }) =>
                      i.boro_name?.includes(selectedBorough)
                    )
                    .map(
                      (d: {
                        assetsubty: string
                        boro_name: string
                        ifoaddress: string
                        ntaname: string
                        objectid: string
                        date_inst: string
                      }) => (
                        <tr key={d.objectid}>
                          <td className="border border-black text-center text-xs lg:text-base lg:p-4">
                            {d.objectid}
                          </td>
                          <td className="border border-black text-center text-xs lg:text-base lg:p-4">
                            {d.boro_name}
                          </td>
                          <td className="border border-black text-center text-xs lg:text-base lg:p-4">
                            {d.ifoaddress}
                          </td>
                          <td className="border border-black text-center text-xs lg:text-base lg:p-4">
                            {d.assetsubty}
                          </td>
                          <td className="border border-black text-center text-xs lg:text-base lg:p-4">
                            {d.date_inst
                              ? formatDate(d.date_inst?.slice(0, 10))
                              : 'No Date Provided'}
                          </td>
                        </tr>
                      )
                    )
                : data.map(
                    (d: {
                      assetsubty: string
                      boro_name: string
                      ifoaddress: string
                      ntaname: string
                      objectid: string
                      date_inst: string
                    }) => (
                      <tr key={d.objectid}>
                        <td className="border border-black text-center text-xs lg:text-base lg:p-4">
                          {d.objectid}
                        </td>
                        <td className="border border-black text-center text-xs lg:text-base lg:p-4">
                          {d.boro_name}
                        </td>
                        <td className="border border-black text-center text-xs lg:text-base lg:p-4">
                          {d.ifoaddress}
                        </td>
                        <td className="border border-black text-center text-xs lg:text-base lg:p-4">
                          {d.assetsubty}
                        </td>
                        <td className="border border-black text-center text-xs lg:text-base lg:p-4">
                          {d.date_inst
                            ? formatDate(d.date_inst?.slice(0, 10))
                            : 'No Date Provided'}
                        </td>
                      </tr>
                    )
                  )}
            </tbody>
          </table>
        </div>
      </div>
      <Footer />
    </div>
  )
}

export default DataPage
